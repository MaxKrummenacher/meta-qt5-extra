From e509eef8b5653796acb44bdd187db6574ed39da8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Sun, 5 Nov 2017 00:58:28 +0100
Subject: [PATCH 3/4] qtractorImportTrackCommand: extend to accept
 qtractorEditTrackCommand
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This is neccessary to align tracks during import the way track modifications
are performed.

* m_trackCommands is now a list of qtractorCommand. This is necessary because
  qtractorEditTrackCommand is not inheriting qtractorTrackCommand.
* qtractorImportTrackCommand::addTrackEditCommand is added
* declaration of qtractorEditTrackCommand is moved before
  qtractorImportTrackCommand to avoid useless forward declarations. This makes
  the diff a bit human-unreadable.

Upstream-Status: Submitted [1]

[1] https://github.com/rncbc/qtractor/pull/94

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 src/qtractorTrackCommand.cpp | 15 +++++++++----
 src/qtractorTrackCommand.h   | 51 ++++++++++++++++++++++----------------------
 2 files changed, 37 insertions(+), 29 deletions(-)

diff --git a/src/qtractorTrackCommand.cpp b/src/qtractorTrackCommand.cpp
index b1a720e..959b566 100644
--- a/src/qtractorTrackCommand.cpp
+++ b/src/qtractorTrackCommand.cpp
@@ -653,6 +653,13 @@ void qtractorImportTrackCommand::addTrack ( qtractorTrack *pTrack )
 	m_pAfterTrack = pTrack;
 }
 
+void qtractorImportTrackCommand::addTrackEditCommand(
+		qtractorEditTrackCommand *pEditTrackCommand)
+{
+	if (pEditTrackCommand)
+		m_trackCommands.append(pEditTrackCommand);
+}
+
 
 // Track-import command methods.
 bool qtractorImportTrackCommand::redo (void)
@@ -665,9 +672,9 @@ bool qtractorImportTrackCommand::redo (void)
 	}
 	++m_iSaveCount;
 
-	QListIterator<qtractorAddTrackCommand *> iter(m_trackCommands);
+	QListIterator<qtractorCommand *> iter(m_trackCommands);
 	while (iter.hasNext()) {
-	    qtractorAddTrackCommand *pTrackCommand = iter.next();
+		qtractorCommand *pTrackCommand = iter.next();
 		if (!pTrackCommand->redo())
 		    bResult = false;
 	}
@@ -679,10 +686,10 @@ bool qtractorImportTrackCommand::undo (void)
 {
 	bool bResult = true;
 
-	QListIterator<qtractorAddTrackCommand *> iter(m_trackCommands);
+	QListIterator<qtractorCommand *> iter(m_trackCommands);
 	iter.toBack();
 	while (iter.hasPrevious()) {
-		qtractorAddTrackCommand *pTrackCommand = iter.previous();
+		qtractorCommand *pTrackCommand = iter.previous();
 		if (!pTrackCommand->undo())
 		    bResult = false;
 	}
diff --git a/src/qtractorTrackCommand.h b/src/qtractorTrackCommand.h
index 0746fba..ab15218 100644
--- a/src/qtractorTrackCommand.h
+++ b/src/qtractorTrackCommand.h
@@ -191,61 +191,62 @@ private:
 
 
 //----------------------------------------------------------------------
-// class qtractorInportTracksCommand - declaration.
+// class qtractorEditTrackCommand - declaration.
 //
 
-class qtractorImportTrackCommand : public qtractorCommand
+class qtractorEditTrackCommand
+	: public qtractorPropertyCommand<qtractorTrack::Properties>
 {
 public:
 
 	// Constructor.
-	qtractorImportTrackCommand(qtractorTrack *pAfterTrack);
-
-	// Destructor.
-	~qtractorImportTrackCommand();
-
-	// Add track to command list.
-	void addTrack(qtractorTrack *pTrack);
+	qtractorEditTrackCommand(qtractorTrack *pTrack,
+		const qtractorTrack::Properties& props);
 
-	// Track-import command methods.
+	// Overridden track-edit command methods.
 	bool redo();
 	bool undo();
 
 private:
 
 	// Instance variables.
-	qtractorTrack *m_pAfterTrack;
-
-	QList<qtractorAddTrackCommand *> m_trackCommands;
-
-	// Session properties backup stuff.
-    qtractorSession::Properties m_sessionProps;
-	qtractorPropertyCommand<qtractorSession::Properties> *m_pSaveCommand;
-	int m_iSaveCount;
+	qtractorTrack *m_pTrack;
 };
 
 
 //----------------------------------------------------------------------
-// class qtractorEditTrackCommand - declaration.
+// class qtractorInportTracksCommand - declaration.
 //
 
-class qtractorEditTrackCommand
-	: public qtractorPropertyCommand<qtractorTrack::Properties>
+class qtractorImportTrackCommand : public qtractorCommand
 {
 public:
 
 	// Constructor.
-	qtractorEditTrackCommand(qtractorTrack *pTrack,
-		const qtractorTrack::Properties& props);
+	qtractorImportTrackCommand(qtractorTrack *pAfterTrack);
 
-	// Overridden track-edit command methods.
+	// Destructor.
+	~qtractorImportTrackCommand();
+
+	// Add track to command list.
+	void addTrack(qtractorTrack *pTrack);
+	// Add track edit command to command list.
+	void addTrackEditCommand(qtractorEditTrackCommand* pEditTrackCommand);
+
+	// Track-import command methods.
 	bool redo();
 	bool undo();
 
 private:
 
 	// Instance variables.
-	qtractorTrack *m_pTrack;
+	qtractorTrack *m_pAfterTrack;
+	QList<qtractorCommand *> m_trackCommands;
+
+	// Session properties backup stuff.
+    qtractorSession::Properties m_sessionProps;
+	qtractorPropertyCommand<qtractorSession::Properties> *m_pSaveCommand;
+	int m_iSaveCount;
 };
 
 
-- 
2.9.5

